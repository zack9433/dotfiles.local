
bind r source-file ~/.tmux.conf \; display "Reloaded!"

set -g status on

#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour130 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour33 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour196 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour46 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour196 #orange

# pane number display
set-option -g display-panes-active-colour colour20 #blue
set-option -g display-panes-colour colour196 #orange

# status right
set-option -g status-right '#H %a %d-%b %H:%M'

# clock
set-window-option -g clock-mode-colour colour40 #green

set-option -g allow-rename off

# unbind C-b
# set -g prefix C-Space
# bind Space send-prefix

bind v split-window -h
bind C-v split-window -h

bind l split-window -h
bind C-l split-window -h

bind s split-window -v
bind C-s split-window -v

bind j split-window -v
bind C-j split-window -v

bind-key q kill-window
bind-key C-q kill-window

bind-key x kill-pane
bind-key C-x kill-pane

bind-key c command-prompt -p "Project:" "new-window -n '%%'"
bind-key C-c command-prompt -p "Project:" "new-window -n '%%'"

setw -g aggressive-resize on

# Rainbows and unicorns
set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

bind C-l send-keys 'C-l'

bind Space copy-mode
bind C-Space copy-mode

unbind -t vi-copy Enter
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Mouse on
# setw -g mouse on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Speed up commands
set-option -sg escape-time 0

set-option -gw window-status-format "#I:#10W#F"

# Instead of detaching, switch to next active session
set-option -g detach-on-destroy off

# Prevent chromedriver doesn't run in tmux
#set-option -g default-command "reattach-to-user-namespace -l bash"
#bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
#bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-nd-selection
bind-key -t vi-copy y copy-pipe "if [ \"$(uname)\" = \"Darwin\" ]; then reattach-to-user-namespace pbcopy; else xclip -selection clipboard; fi"
